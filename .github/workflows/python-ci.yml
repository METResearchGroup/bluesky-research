name: Python CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Cache Python packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-py-${{ matrix.python-version }}-${{ hashFiles('requirements.txt', 'dev_requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-py-${{ matrix.python-version }}-${{ hashFiles('requirements.txt', 'dev_requirements.txt') }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest autopep8
        pip install -r requirements.txt
        pip install -r dev_requirements.txt
    - name: Auto-fix Lint with autopep8
      run: |
        autopep8 --in-place --recursive .
    - name: Add project directory to PYTHONPATH
      run: echo "PYTHONPATH=${{ github.workspace }}" >> $GITHUB_ENV
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        # pytest --ignore=experiments --no-header -v
    - name: Lint Dockerfiles with Hadolint
      run: |
        docker run --rm -i hadolint/hadolint < Dockerfiles/api.Dockerfile
        docker run --rm -i hadolint/hadolint < Dockerfiles/classify.Dockerfile
        docker run --rm -i hadolint/hadolint < Dockerfiles/data_pipeline_orchestration.Dockerfile
        docker run --rm -i hadolint/hadolint < Dockerfiles/feed_postprocessing.Dockerfile
        docker run --rm -i hadolint/hadolint < Dockerfiles/feed_preprocessing.Dockerfile
        docker run --rm -i hadolint/hadolint < Dockerfiles/manage_bluesky_feeds.Dockerfile
        docker run --rm -i hadolint/hadolint < Dockerfiles/manage_users.Dockerfile
        docker run --rm -i hadolint/hadolint < Dockerfiles/recommendation.Dockerfile
        docker run --rm -i hadolint/hadolint < Dockerfiles/sync.Dockerfile

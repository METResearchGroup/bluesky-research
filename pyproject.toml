[project]
name = "bluesky-research"
version = "0.1.0"
description = "Bluesky Research"
readme = "README.md"
requires-python = ">=3.10"  # Match your ruff target-version
authors = [
    {name = "Mark Torres", email = "markptorres1@gmail.com"},
]
license = {text = "MIT"}


[tool.flake8]
exclude = ["*/experiments/*", "./demos/*"]
max-line-length = 80
max-complexity = 10

[tool.uv.workspace]
members = ["pipelines/get_existing_user_social_network"]

[tool.pytest.ini_options]
# Add custom markers
markers = [
    "integration: marks tests as integration tests",
    "slow: marks tests as slow running",
]

# Set environment variables for all tests
env = [
    "ENVIRONMENT=test",
    "RUN_MODE=test",
    "AWS_DEFAULT_REGION=us-east-1",
    "AWS_ACCESS_KEY_ID=testing",
    "AWS_SECRET_ACCESS_KEY=testing",
    "AWS_SECURITY_TOKEN=testing",
    "AWS_SESSION_TOKEN=testing",
    "GOOGLE_API_KEY=testing",
    "NYTIMES_KEY=testing",
    "HF_TOKEN=testing",
    "OPENAI_API_KEY=testing",
    "GOOGLE_AI_STUDIO_KEY=testing",
    "NEWSAPI_API_KEY=testing",
    "GROQ_API_KEY=testing",
    "MONGODB_URI=testing",
    "LANGTRACE_API_KEY=testing",
    "COMET_API_KEY=testing",
]

# Configure test collection
testpaths = [
    "api/integrations_router/tests",
    "lib/db/tests", 
    "lib/db/sql/tests",
    "lib/telemetry/tests",
    "ml_tooling/ime/tests",
    "ml_tooling/llm/tests",
    "ml_tooling/perspective_api/tests",
    "services/backfill/posts/tests",
    "services/ml_inference/tests",
    "services/ml_inference/ime/tests",
    "services/ml_inference/perspective_api/tests",
    "services/ml_inference/sociopolitical/tests",
    "services/get_preprocessed_posts_used_in_feeds/tests",
    "services/map_uri_to_created_at/tests",
    "services/repartition_service/tests",
    "services/calculate_analytics/tests",
    "pipelines/backfill_records_coordination/tests",
]

# Ignore certain directories
norecursedirs = [
    "experiments*",
    "*.egg",
    "build",
    "dist"
]

# Add command line default options
addopts = [
    "--verbose",
    "--no-header",
    "--ignore=experiments",
    "--tb=short",
    "--strict-markers",
]

# Configure pytest plugins
required_plugins = [
    "pytest-env",
    "pytest-mock"
]
